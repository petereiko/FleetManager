@using FleetManager.Business.ViewModels
@model AssignmentEditViewModel
@{
    ViewData["Title"] = "Edit Assignment";
}

    <style>
        .page-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            border-radius: 0 0 25px 25px;
        }

        .form-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .form-header {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            color: white;
            padding: 2rem;
            text-align: center;
        }

        .current-assignment {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            color: #333;
        }

        .assignment-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            background: white;
            border-radius: 10px;
            margin-bottom: 1rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .driver-avatar, .vehicle-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 18px;
            margin-right: 1rem;
        }

        .driver-avatar {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .vehicle-icon {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            border-radius: 12px;
        }

        .form-section {
            padding: 2rem;
        }

        .form-floating > label {
            color: #667eea;
            font-weight: 600;
        }

        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

        .btn-gradient {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            border: none;
            color: white;
            padding: 12px 30px;
            border-radius: 25px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

            .btn-gradient:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(17, 153, 142, 0.4);
                color: white;
            }

        .btn-outline-gradient {
            border: 2px solid #667eea;
            color: #667eea;
            background: transparent;
            padding: 12px 30px;
            border-radius: 25px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

            .btn-outline-gradient:hover {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                transform: translateY(-2px);
            }

        .danger-zone {
            background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);
            border-radius: 15px;
            padding: 2rem;
            margin-top: 2rem;
        }

        .change-highlight {
            background: rgba(255, 193, 7, 0.1);
            border-left: 4px solid #ffc107;
            padding: 1rem;
            border-radius: 8px;
            margin: 1rem 0;
        }

        .timeline {
            position: relative;
            padding-left: 2rem;
        }

            .timeline::before {
                content: '';
                position: absolute;
                left: 10px;
                top: 0;
                bottom: 0;
                width: 2px;
                background: #dee2e6;
            }

        .timeline-item {
            position: relative;
            margin-bottom: 2rem;
        }

            .timeline-item::before {
                content: '';
                position: absolute;
                left: -25px;
                top: 8px;
                width: 12px;
                height: 12px;
                border-radius: 50%;
                background: #667eea;
            }

        .status-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
    </style>


<div class="page-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="mb-2">
                    <i class="fas fa-edit me-3"></i>Edit Vehicle Assignment
                </h1>
                <p class="mb-0 opacity-75">Modify assignment details</p>
            </div>
            <div class="col-md-4 text-end">
                <a href="@Url.Action("Index")" class="btn btn-light btn-lg">
                    <i class="fas fa-arrow-left me-2"></i>Back to List
                </a>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="form-card">
                <div class="form-header">
                    <h3 class="mb-2">
                        <i class="fas fa-pencil-alt me-2"></i>Assignment #@Model.Id
                    </h3>
                    <p class="mb-0 opacity-75">Update assignment information</p>
                </div>

                <!-- Current Assignment Display -->
                <div class="form-section border-bottom">
                    <h5 class="mb-3">
                        <i class="fas fa-info-circle me-2 text-info"></i>Current Assignment
                    </h5>
                    <div class="current-assignment">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="assignment-item">
                                    <div class="driver-avatar">
                                        @{
                                            var currentDriver = Model.Drivers.FirstOrDefault(d => d.Value == Model.Input.DriverId.ToString())?.Text ?? "Unknown";
                                        }
                                        @(currentDriver.Substring(0, 1).ToUpper())
                                    </div>
                                    <div>
                                        <h6 class="mb-0 fw-bold">@currentDriver</h6>
                                        <small class="text-muted">Current Driver</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="assignment-item">
                                    <div class="vehicle-icon">
                                        <i class="fas fa-car"></i>
                                    </div>
                                    <div>
                                        @{
                                            var currentVehicle = Model.Vehicles.FirstOrDefault(v => v.Value == Model.Input.VehicleId.ToString())?.Text ?? "Unknown";
                                        }
                                        <h6 class="mb-0 fw-bold">@currentVehicle</h6>
                                        <small class="text-muted">Current Vehicle</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="timeline mt-3">
                            <div class="timeline-item">
                                <strong>Start Date:</strong> @Model.Input.StartDate.ToString("dd MMM yyyy")
                            </div>
                            <div class="timeline-item">
                                <strong>End Date:</strong> @(Model.Input.EndDate?.ToString("dd MMM yyyy") ?? "Ongoing")
                            </div>
                        </div>
                    </div>
                </div>

                <form method="post" id="editForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Id" />
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger mx-4 mt-3"></div>

                    <!-- Edit Form -->
                    <div class="form-section">
                        <h5 class="mb-4">
                            <i class="fas fa-cog me-2 text-warning"></i>Update Assignment Details
                        </h5>

                        <div class="row">
                            <!-- Driver Selection -->
                            <div class="col-md-6 mb-4">
                                <div class="form-floating">
                                    <select class="form-select" asp-for="Input.DriverId" id="driverSelect">
                                        <option value="">Select Driver</option>
                                        @foreach (var driver in Model.Drivers)
                                        {
                                            <option value="@driver.Value" selected="@(driver.Selected ? "selected" : null)">@driver.Text</option>
                                        }
                                    </select>
                                    <label for="driverSelect">
                                        <i class="fas fa-user me-1"></i>Driver
                                    </label>
                                </div>
                                <span asp-validation-for="Input.DriverId" class="text-danger"></span>
                            </div>

                            <!-- Vehicle Selection -->
                            <div class="col-md-6 mb-4">
                                <div class="form-floating">
                                    <select class="form-select" asp-for="Input.VehicleId" id="vehicleSelect">
                                        <option value="">Select Vehicle</option>
                                        @foreach (var vehicle in Model.Vehicles)
                                        {
                                            <option value="@vehicle.Value" selected="@(vehicle.Selected ? "selected" : "")">@vehicle.Text</option>
                                        }
                                    </select>
                                    <label for="vehicleSelect">
                                        <i class="fas fa-car me-1"></i>Vehicle
                                    </label>
                                </div>
                                <span asp-validation-for="Input.VehicleId" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Start Date -->
                            <div class="col-md-6 mb-4">
                                <div class="form-floating">
                                    <input type="date" class="form-control" asp-for="Input.StartDate" id="startDate" />
                                    <label for="startDate">
                                        <i class="fas fa-play me-1"></i>Start Date
                                    </label>
                                </div>
                                <span asp-validation-for="Input.StartDate" class="text-danger"></span>
                            </div>

                            <!-- End Date -->
                            <div class="col-md-6 mb-4">
                                <div class="form-floating">
                                    <input type="date" class="form-control" asp-for="Input.EndDate" id="endDate" />
                                    <label for="endDate">
                                        <i class="fas fa-stop me-1"></i>End Date (Optional)
                                    </label>
                                </div>
                                <span asp-validation-for="Input.EndDate" class="text-danger"></span>
                                <small class="form-text text-muted mt-1">Leave empty for ongoing assignment</small>
                            </div>
                        </div>

                        <!-- Change Preview -->
                        <div id="changePreview" class="change-highlight d-none">
                            <h6 class="fw-bold mb-2">
                                <i class="fas fa-exclamation-triangle me-2"></i>Changes Detected
                            </h6>
                            <div id="changesList"></div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="form-section border-top">
                        <div class="d-flex justify-content-between align-items-center">
                            <a asp-action="Index" class="btn btn-outline-gradient">
                                <i class="fas fa-times me-2"></i>Cancel
                            </a>
                            <div>
                                <button type="button" class="btn btn-outline-secondary me-2" onclick="resetForm()">
                                    <i class="fas fa-undo me-2"></i>Reset Changes
                                </button>
                                <button type="submit" class="btn btn-gradient" id="saveBtn">
                                    <i class="fas fa-save me-2"></i>Save Changes
                                </button>
                            </div>
                        </div>
                    </div>
                </form>

                <!-- Danger Zone -->
                <div class="danger-zone">
                    <h5 class="fw-bold mb-3 text-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>Danger Zone
                    </h5>
                    <p class="mb-3 text-dark">Permanently remove this assignment. This action cannot be undone.</p>
                    <form method="post" action="@Url.Action("Delete", new { id = Model.Id })" class="d-inline" id="deleteForm">
                        @Html.AntiForgeryToken()
                        <button type="button" class="btn btn-danger" onclick="confirmDelete()">
                            <i class="fas fa-trash me-2"></i>Unassign Vehicle
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Store original values for comparison
        const originalValues = {
            driverId: '@Model.Input.DriverId',
            vehicleId: '@Model.Input.VehicleId',
            startDate: '@Model.Input.StartDate.ToString("yyyy-MM-dd")',
            endDate: '@(Model.Input.EndDate?.ToString("yyyy-MM-dd") ?? "")'
        };

        function detectChanges() {
            const currentValues = {
                driverId: $('#driverSelect').val(),
                vehicleId: $('#vehicleSelect').val(),
                startDate: $('#startDate').val(),
                endDate: $('#endDate').val()
            };

            const changes = [];

            if (currentValues.driverId !== originalValues.driverId) {
                const newDriverName = $('#driverSelect option:selected').text();
                changes.push(`Driver changed to: <strong>${newDriverName}</strong>`);
            }

            if (currentValues.vehicleId !== originalValues.vehicleId) {
                const newVehicleName = $('#vehicleSelect option:selected').text();
                changes.push(`Vehicle changed to: <strong>${newVehicleName}</strong>`);
            }

            if (currentValues.startDate !== originalValues.startDate) {
                const newStartDate = new Date(currentValues.startDate).toLocaleDateString();
                changes.push(`Start date changed to: <strong>${newStartDate}</strong>`);
            }

            if (currentValues.endDate !== originalValues.endDate) {
                if (currentValues.endDate) {
                    const newEndDate = new Date(currentValues.endDate).toLocaleDateString();
                    changes.push(`End date changed to: <strong>${newEndDate}</strong>`);
                } else {
                    changes.push(`End date removed (now ongoing)`);
                }
            }

            if (changes.length > 0) {
                $('#changesList').html('<ul><li>' + changes.join('</li><li>') + '</li></ul>');
                $('#changePreview').removeClass('d-none');
                $('#saveBtn').removeClass('btn-gradient').addClass('btn-warning').html('<i class="fas fa-save me-2"></i>Save Changes');
            } else {
                $('#changePreview').addClass('d-none');
                $('#saveBtn').removeClass('btn-warning').addClass('btn-gradient').html('<i class="fas fa-save me-2"></i>Save Changes');
            }
        }

        function resetForm() {
            $('#driverSelect').val(originalValues.driverId);
            $('#vehicleSelect').val(originalValues.vehicleId);
            $('#startDate').val(originalValues.startDate);
            $('#endDate').val(originalValues.endDate);
            detectChanges();
        }

        function confirmDelete() {
            const result = confirm('Are you sure you want to unassign this vehicle?\n\nThis will permanently remove the assignment and cannot be undone.');
            if (result) {
                $('#deleteForm button').html('<i class="fas fa-spinner fa-spin me-2"></i>Unassigning...');
                $('#deleteForm button').prop('disabled', true);
                $('#deleteForm').submit();
            }
        }

        // Initialize on page load
        $(document).ready(function() {
            // Set up change detection
            $('#driverSelect, #vehicleSelect, #startDate, #endDate').change(detectChanges);

            // Set minimum date constraints
            const today = new Date().toISOString().split('T')[0];
            $('#startDate').attr('min', today);

            $('#startDate').change(function() {
                $('#endDate').attr('min', this.value);
            });

            // Initial change detection
            detectChanges();

            // Form validation
            $('#editForm').submit(function(e) {
                if (!$('#driverSelect').val() || !$('#vehicleSelect').val() || !$('#startDate').val()) {
                    e.preventDefault();
                    showAlert('Please fill in all required fields.', 'danger');
                    return false;
                }

                // Show loading state
                $('#saveBtn').html('<i class="fas fa-spinner fa-spin me-2"></i>Saving Changes...');
                $('#saveBtn').prop('disabled', true);
            });
        });

        function showAlert(message, type = 'info') {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    <i class="fas fa-${type === 'danger' ? 'exclamation-circle' : 'info-circle'} me-2"></i>
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            $('.container .alert').remove();
            $('.container').prepend(alertHtml);

            setTimeout(() => {
                $('.alert').fadeOut();
            }, 5000);
        }

        // Warn user about unsaved changes
        let hasUnsavedChanges = false;
        $('#driverSelect, #vehicleSelect, #startDate, #endDate').change(function() {
            hasUnsavedChanges = true;
        });

        $('#editForm').submit(function() {
            hasUnsavedChanges = false;
        });

        window.addEventListener('beforeunload', function(e) {
            if (hasUnsavedChanges) {
                e.preventDefault();
                e.returnValue = '';
                return '';
            }
        });
    </script>
}