@* @using FleetManager.Business.ViewModels
@model AssignmentIndexViewModel
@{
    ViewData["Title"] = "My Assigned Vehicles";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container py-4">
    <h2>@ViewData["Title"]</h2>


    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var a in Model.AssignedVehicles)
        {
            <div class="col">
                <div class="card h-100">


                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@a.VehicleMakeModel</h5>
                        <p class="mb-1"><strong>Plate:</strong> @a.PlateNo</p>
                        <p class="flex-grow-1 small text-muted">
                            Assigned: @a.StartDate:dd MMM yyyy
                            @(a.EndDate.HasValue
                                ? "– " + a.EndDate.Value.ToString("dd MMM yyyy")
                                : "(ongoing)")
                        </p>

                        <button class="btn btn-primary view-details-btn mt-auto"
                                data-url="@Url.Action( "Details","AssignedVehicle", new { protectedId = a.EncodedVehicleId })">
                            View Details
                        </button>

                    </div>
                </div>
            </div>
        }
    </div>



</div>





<!-- Vehicle Details Modal -->
<div class="modal fade" id="vehicleDetailsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Vehicle Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- AJAX-loaded content will go here -->
                <div class="text-center py-5">
                    <div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    $(function(){
      var modalEl = document.getElementById('vehicleDetailsModal');
      var modal   = new bootstrap.Modal(modalEl);

      $('.view-details-btn').on('click', function(){
        // 1) Pull the already-correct URL from the button
        var url = $(this).data('url');

        // 2) Show loading spinner
        $('#vehicleDetailsModal .modal-body').html(`
          <div class="text-center p-5">
            <div class="spinner-border" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
          </div>
        `);

        // 3) Open the modal
        modal.show();

        // 4) AJAX fetch and inject
        $.get(url)
          .done(function(html){
            $('#vehicleDetailsModal .modal-body').html(html);
          })
          .fail(function(jqXHR){
            console.error("AJAX error:", jqXHR.status, jqXHR.statusText);
            $('#vehicleDetailsModal .modal-body').html(
              '<div class="alert alert-danger">' +
              'Failed to load details. (' + jqXHR.status + ' ' +
              jqXHR.statusText + ')</div>'
            );
          });
      });
    });
</script> *@





          @using FleetManager.Business.ViewModels
@model AssignmentIndexViewModel
@{
    ViewData["Title"] = "My Assigned Vehicles";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />

<style>
    .vehicle-card {
        border: none;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        border-radius: 12px;
        overflow: hidden;
    }

        .vehicle-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

    .vehicle-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 1rem;
        position: relative;
    }

    .vehicle-status-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 0.75rem;
        padding: 0.3rem 0.6rem;
        border-radius: 15px;
    }

    .status-active {
        background-color: #28a745;
    }

    .status-inactive {
        background-color: #6c757d;
    }

    .status-maintenance {
        background-color: #ffc107;
        color: #000;
    }

    .status-damaged {
        background-color: #dc3545;
    }

    .vehicle-info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0.5rem;
        margin: 1rem 0;
    }

    .info-item {
        display: flex;
        align-items: center;
        font-size: 0.85rem;
    }

        .info-item i {
            width: 16px;
            margin-right: 8px;
            color: #6c757d;
        }

    .assignment-timeline {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 0.75rem;
        margin: 1rem 0;
        border-left: 4px solid #007bff;
    }

    .search-filter-bar {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .stats-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
        margin-bottom: 2rem;
    }

    .stats-number {
        font-size: 2.5rem;
        font-weight: bold;
        margin-bottom: 0.5rem;
    }

    .btn-modern {
        border-radius: 8px;
        padding: 0.5rem 1.5rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-modern:hover {
            transform: translateY(-1px);
        }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #6c757d;
    }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }
</style>

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-1"><i class="fas fa-car me-2"></i>@ViewData["Title"]</h2>
                    <p class="text-muted">Manage and view your assigned fleet vehicles</p>
                </div>
                <div>
                    <button class="btn btn-outline-primary btn-modern" onclick="refreshVehicles()">
                        <i class="fas fa-sync-alt me-2"></i>Refresh
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    @if (Model.AssignedVehicles != null && Model.AssignedVehicles.Any())
    {
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="stats-card">
                    <div class="stats-number">@Model.AssignedVehicles.Count()</div>
                    <div>Total Assigned</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%);">
                    <div class="stats-number">@Model.AssignedVehicles.Count(v => !v.EndDate.HasValue)</div>
                    <div>Currently Active</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card" style="background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);">
                    <div class="stats-number">@Model.AssignedVehicles.Count(v => v.EndDate.HasValue)</div>
                    <div>Completed</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card" style="background: linear-gradient(135deg, #6f42c1 0%, #e83e8c 100%);">
                    <div class="stats-number">@DateTime.Now.Year</div>
                    <div>Current Year</div>
                </div>
            </div>
        </div>
    }

    <!-- Search and Filter Bar -->
    <div class="search-filter-bar">
        <div class="row align-items-center">
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" class="form-control" id="searchInput" placeholder="Search by make, model, or plate...">
                </div>
            </div>
            <div class="col-md-3">
                <select class="form-select" id="statusFilter">
                    <option value="">All Status</option>
                    <option value="active">Active</option>
                    <option value="completed">Completed</option>
                </select>
            </div>
            <div class="col-md-2">
                <select class="form-select" id="sortOrder">
                    <option value="newest">Newest First</option>
                    <option value="oldest">Oldest First</option>
                    <option value="make">By Make</option>
                </select>
            </div>
            <div class="col-md-3">
                <div class="btn-group w-100" role="group">
                    <button type="button" class="btn btn-outline-secondary active" id="cardView">
                        <i class="fas fa-th"></i>
                    </button>
                    <button type="button" class="btn btn-outline-secondary" id="listView">
                        <i class="fas fa-list"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Vehicles Grid -->
    <div id="vehiclesContainer">
        @if (Model.AssignedVehicles != null && Model.AssignedVehicles.Any())
        {
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="vehiclesGrid">
                @foreach (var assignment in Model.AssignedVehicles)
                {
                    <div class="col vehicle-item"
                         data-make="@assignment.VehicleMakeModel"
                         data-plate="@assignment.PlateNo"
                         data-status="@(assignment.EndDate.HasValue ? "completed" : "active")"
                         data-date="@assignment.StartDate.Ticks">
                        <div class="card vehicle-card h-100">
                            <div class="vehicle-header">
                                <h5 class="card-title mb-1">
                                    <i class="fas fa-car me-2"></i>@assignment.VehicleMakeModel
                                </h5>
                                <small class="opacity-75">Plate: @assignment.PlateNo</small>
                                <span class="badge vehicle-status-badge @(assignment.EndDate.HasValue ? "status-inactive" : "status-active")">
                                    @(assignment.EndDate.HasValue ? "Completed" : "Active")
                                </span>
                            </div>

                            <div class="card-body d-flex flex-column">
                                <div class="vehicle-info-grid">
                                    <div class="info-item">
                                        <i class="fas fa-calendar-alt"></i>
                                        <span>Started: @assignment.StartDate.ToString("dd MMM yyyy")</span>
                                    </div>
                                    @if (assignment.EndDate.HasValue)
                                    {
                                        <div class="info-item">
                                            <i class="fas fa-calendar-check"></i>
                                            <span>Ended: @assignment.EndDate.Value.ToString("dd MMM yyyy")</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="info-item">
                                            <i class="fas fa-clock"></i>
                                            <span>Duration: @((DateTime.Now - assignment.StartDate).Days) days</span>
                                        </div>
                                    }
                                </div>

                                <div class="assignment-timeline">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">
                                            <i class="fas fa-play-circle me-1"></i>
                                            @assignment.StartDate.ToString("dd MMM yyyy")
                                        </small>
                                        @if (!assignment.EndDate.HasValue)
                                        {
                                            <span class="badge bg-success">
                                                <i class="fas fa-circle me-1"></i>Ongoing
                                            </span>
                                        }
                                        else
                                        {
                                            <small class="text-muted">
                                                <i class="fas fa-stop-circle me-1"></i>
                                                @assignment.EndDate.Value.ToString("dd MMM yyyy")
                                            </small>
                                        }
                                    </div>
                                </div>

                                <div class="mt-auto pt-3">
                                    <button class="btn btn-primary btn-modern w-100 view-details-btn"
                                            data-url="@Url.Action("Details", "AssignedVehicle", new { protectedId = assignment.EncodedVehicleId })">
                                        <i class="fas fa-eye me-2"></i>View Details
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-car"></i>
                <h4>No Assigned Vehicles</h4>
                <p>You don't have any vehicles assigned to you at the moment.</p>
                <button class="btn btn-primary btn-modern" onclick="refreshVehicles()">
                    <i class="fas fa-sync-alt me-2"></i>Check Again
                </button>
            </div>
        }
    </div>
</div>

<!-- Enhanced Vehicle Details Modal -->
<div class="modal fade" id="vehicleDetailsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content" style="border-radius: 12px; border: none; box-shadow: 0 10px 30px rgba(0,0,0,0.3);">
            <div class="modal-header" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 12px 12px 0 0;">
                <h5 class="modal-title">
                    <i class="fas fa-car me-2"></i>Vehicle Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <!-- AJAX-loaded content will go here -->
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3 text-muted">Loading vehicle details...</p>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    $(document).ready(function() {
        // Initialize modal
        var modalEl = document.getElementById('vehicleDetailsModal');
        var modal = new bootstrap.Modal(modalEl);

        // View details functionality
        $('.view-details-btn').on('click', function() {
            var url = $(this).data('url');

            // Show loading state
            $('#vehicleDetailsModal .modal-body').html(`
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3 text-muted">Loading vehicle details...</p>
                </div>
            `);

            // Show modal
            modal.show();

            // Load content via AJAX
            $.get(url)
                .done(function(html) {
                    $('#vehicleDetailsModal .modal-body').html(html);
                })
                .fail(function(jqXHR) {
                    console.error("AJAX error:", jqXHR.status, jqXHR.statusText);
                    $('#vehicleDetailsModal .modal-body').html(`
                        <div class="alert alert-danger m-4">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            Failed to load vehicle details. (${jqXHR.status} ${jqXHR.statusText})
                            <br><small>Please try again or contact support if the problem persists.</small>
                        </div>
                    `);
                });
        });

        // Search functionality
        $('#searchInput').on('keyup', function() {
            filterVehicles();
        });

        // Filter functionality
        $('#statusFilter, #sortOrder').on('change', function() {
            filterVehicles();
        });

        // View toggle functionality
        $('#cardView, #listView').on('click', function() {
            $('#cardView, #listView').removeClass('active');
            $(this).addClass('active');

            if ($(this).attr('id') === 'listView') {
                switchToListView();
            } else {
                switchToCardView();
            }
        });

        function filterVehicles() {
            var searchTerm = $('#searchInput').val().toLowerCase();
            var statusFilter = $('#statusFilter').val();
            var sortOrder = $('#sortOrder').val();

            var $vehicles = $('.vehicle-item');
            var visibleVehicles = [];

            // Filter vehicles
            $vehicles.each(function() {
                var $vehicle = $(this);
                var make = $vehicle.data('make').toLowerCase();
                var plate = $vehicle.data('plate').toLowerCase();
                var status = $vehicle.data('status');

                var matchesSearch = make.includes(searchTerm) || plate.includes(searchTerm);
                var matchesStatus = !statusFilter || status === statusFilter;

                if (matchesSearch && matchesStatus) {
                    $vehicle.show();
                    visibleVehicles.push($vehicle);
                } else {
                    $vehicle.hide();
                }
            });

            // Sort vehicles
            if (sortOrder && visibleVehicles.length > 0) {
                var $container = $('#vehiclesGrid');
                var sortedVehicles = visibleVehicles.sort(function(a, b) {
                    switch (sortOrder) {
                        case 'newest':
                            return $(b).data('date') - $(a).data('date');
                        case 'oldest':
                            return $(a).data('date') - $(b).data('date');
                        case 'make':
                            return $(a).data('make').localeCompare($(b).data('make'));
                        default:
                            return 0;
                    }
                });

                // Reorder DOM elements
                sortedVehicles.forEach(function($vehicle) {
                    $container.append($vehicle);
                });
            }
        }

        function switchToListView() {
            $('#vehiclesGrid').removeClass('row-cols-1 row-cols-md-2 row-cols-lg-3').addClass('row-cols-1');
            $('.vehicle-card').addClass('mb-2').css('max-height', '200px');
            $('.vehicle-info-grid').hide();
            $('.assignment-timeline').hide();
        }

        function switchToCardView() {
            $('#vehiclesGrid').removeClass('row-cols-1').addClass('row-cols-1 row-cols-md-2 row-cols-lg-3');
            $('.vehicle-card').removeClass('mb-2').css('max-height', 'none');
            $('.vehicle-info-grid').show();
            $('.assignment-timeline').show();
        }
    });

    function refreshVehicles() {
        location.reload();
    }
</script>