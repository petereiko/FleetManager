@* @using FleetManager.Business.DataObjects.VehicleDto
@model VehicleDto

<div class="container-fluid py-3">
  <div class="row">
    <!-- Vehicle Details -->
    <div class="col-lg-6 mb-3">
      <h5>Vehicle Information</h5>
      <dl class="row">
        <dt class="col-sm-4">Make</dt>
        <dd class="col-sm-8">@Model.Make</dd>

        <dt class="col-sm-4">Model</dt>
        <dd class="col-sm-8">@Model.Model</dd>

        <dt class="col-sm-4">Year</dt>
        <dd class="col-sm-8">@Model.Year</dd>

        <dt class="col-sm-4">VIN</dt>
        <dd class="col-sm-8">@Model.VIN</dd>

        <dt class="col-sm-4">Plate No.</dt>
        <dd class="col-sm-8">@Model.PlateNo</dd>

        <dt class="col-sm-4">Color</dt>
        <dd class="col-sm-8">@Model.Color</dd>

        <dt class="col-sm-4">Engine #</dt>
        <dd class="col-sm-8">@Model.EngineNumber</dd>

        <dt class="col-sm-4">Chassis #</dt>
        <dd class="col-sm-8">@Model.ChassisNumber</dd>

        <dt class="col-sm-4">Registration Date</dt>
        <dd class="col-sm-8">
                    @Model.RegistrationDate.Value.ToString("dd MMM yyyy")
        </dd>

        <dt class="col-sm-4">Last Service</dt>
        <dd class="col-sm-8">
                    @(Model.LastServiceDate.HasValue
                            ? Model.LastServiceDate.Value.ToString("dd MMM yyyy")
                            : "N/A")
        </dd>

        <dt class="col-sm-4">Mileage</dt>
        <dd class="col-sm-8">@Model.Mileage</dd>

        <dt class="col-sm-4">Fuel Type</dt>
        <dd class="col-sm-8">@Model.FuelType</dd>

        <dt class="col-sm-4">Transmission</dt>
        <dd class="col-sm-8">@Model.TransmissionType</dd>

        <dt class="col-sm-4">Insurance Co.</dt>
        <dd class="col-sm-8">@Model.InsuranceCompany</dd>

        <dt class="col-sm-4">Insurance Expiry</dt>
        <dd class="col-sm-8">
                    @(Model.InsuranceExpiryDate.HasValue
                            ? Model.InsuranceExpiryDate.Value.ToString("dd MMM yyyy")
                            : "N/A")
        </dd>

        <dt class="col-sm-4">Road-Worthy Expiry</dt>
        <dd class="col-sm-8">
                    @(Model.RoadWorthyExpiryDate.HasValue
                            ? Model.RoadWorthyExpiryDate.Value.ToString("dd MMM yyyy")
                            : "N/A")
        </dd>

        <dt class="col-sm-4">Branch ID</dt>
        <dd class="col-sm-8">@Model.CompanyBranchId</dd>

        <dt class="col-sm-4">Status</dt>
        <dd class="col-sm-8">@Model.VehicleStatus</dd>

        <dt class="col-sm-4">Type</dt>
        <dd class="col-sm-8">@Model.VehicleType</dd>
      </dl>
    </div>

    <!-- Photos & Documents -->
    <div class="col-lg-6">
      <h5>Photos</h5>
            @if (Model.Photos != null && Model.Photos.Any())
            {
            <div class="row g-2 mb-4">
                    @foreach (var photo in Model.Photos)
                    {
                    <div class="col-6 col-md-4">
                      <img src="@Url.Content(photo.FilePath)"
                           class="img-fluid rounded shadow-sm"
                           alt="@photo.FileName" />
                    </div>
                    }
            </div>
            }
            else
            {
            <p class="text-muted">No photos available.</p>
            }

      <h5>Documents</h5>
            @if (Model.Documents != null && Model.Documents.Any())
            {
            <ul class="list-group">
                    @foreach (var doc in Model.Documents)
                    {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                      <div>
                        <i class="far fa-file-alt me-2"></i>
                                @doc.FileName
                      </div>
                      <a href="@Url.Content(doc.FilePath)"
                         class="btn btn-sm btn-outline-primary"
                         target="_blank">
                        Download
                      </a>
                    </li>
                    }
            </ul>
            }
            else
            {
            <p class="text-muted">No documents available.</p>
            }
    </div>
  </div>
</div>
 *@







@using FleetManager.Business.DataObjects.VehicleDto
@model VehicleDto

<style>
    .detail-section {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        margin-bottom: 1.5rem;
        overflow: hidden;
    }

    .section-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 1rem 1.5rem;
        margin: 0;
        font-size: 1.1rem;
        font-weight: 600;
    }

    .section-content {
        padding: 1.5rem;
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .info-item {
        display: flex;
        align-items: center;
        padding: 0.75rem;
        background: #f8f9fa;
        border-radius: 8px;
        border-left: 4px solid #007bff;
    }

    .info-label {
        font-weight: 600;
        color: #495057;
        margin-right: 0.5rem;
        min-width: 100px;
    }

    .info-value {
        color: #212529;
        flex: 1;
    }

    .info-icon {
        margin-right: 0.75rem;
        width: 20px;
        text-align: center;
        color: #007bff;
    }

    .status-badge {
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .status-active {
        background-color: #d4edda;
        color: #155724;
    }

    .status-inactive {
        background-color: #d1ecf1;
        color: #0c5460;
    }

    .status-maintenance {
        background-color: #fff3cd;
        color: #856404;
    }

    .status-damaged {
        background-color: #f8d7da;
        color: #721c24;
    }

    .photo-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 1rem;
        margin-top: 1rem;
    }

    .photo-item {
        position: relative;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
        cursor: pointer;
    }

        .photo-item:hover {
            transform: scale(1.05);
        }

        .photo-item img {
            width: 100%;
            height: 150px;
            object-fit: cover;
        }

    .photo-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(transparent, rgba(0,0,0,0.7));
        color: white;
        padding: 1rem 0.75rem 0.75rem;
        font-size: 0.85rem;
    }

    .document-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .document-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1rem;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        margin-bottom: 0.75rem;
        transition: all 0.3s ease;
    }

        .document-item:hover {
            border-color: #007bff;
            box-shadow: 0 2px 10px rgba(0,123,255,0.1);
        }

    .document-info {
        display: flex;
        align-items: center;
        flex: 1;
    }

    .document-icon {
        width: 40px;
        height: 40px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        margin-right: 1rem;
    }

    .document-details h6 {
        margin: 0;
        font-size: 0.95rem;
        color: #212529;
    }

    .document-details small {
        color: #6c757d;
    }

    .btn-download {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        border: none;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        text-decoration: none;
        transition: all 0.3s ease;
    }

        .btn-download:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 15px rgba(40,167,69,0.3);
            color: white;
        }

    .empty-state {
        text-align: center;
        padding: 3rem 1rem;
        color: #6c757d;
    }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

    .expiry-warning {
        border-left-color: #ffc107 !important;
        background-color: #fff8e1;
    }

    .expiry-danger {
        border-left-color: #dc3545 !important;
        background-color: #ffebee;
    }

    .timeline-item {
        position: relative;
        padding-left: 2rem;
        margin-bottom: 1rem;
    }

        .timeline-item::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0.5rem;
            width: 12px;
            height: 12px;
            background: #007bff;
            border-radius: 50%;
            border: 3px solid white;
            box-shadow: 0 0 0 2px #007bff;
        }

        .timeline-item::after {
            content: '';
            position: absolute;
            left: 5px;
            top: 1.5rem;
            width: 2px;
            height: calc(100% + 0.5rem);
            background: #e9ecef;
        }

        .timeline-item:last-child::after {
            display: none;
        }
</style>

<div class="container-fluid p-0">
    <!-- Vehicle Overview Header -->
    <div class="detail-section">
        <h5 class="section-header">
            <i class="fas fa-car me-2"></i>
            @Model.Make @Model.Model (@Model.Year)
        </h5>
        <div class="section-content">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <div class="d-flex flex-wrap gap-3 align-items-center">
                        <span class="status-badge status-@(Model.VehicleStatus.ToString().ToLower() ?? "active")">
                            <i class="fas fa-circle me-1"></i>@(Model.VehicleStatus.ToString() ?? "Active")
                        </span>
                        <span class="badge bg-secondary">@(Model.VehicleType.ToString() ?? "Unknown Type")</span>
                        <span class="text-muted">
                            <i class="fas fa-hashtag me-1"></i>@Model.PlateNo
                        </span>
                    </div>
                    <p class="mt-2 mb-0 text-muted">
                        <i class="fas fa-map-marker-alt me-2"></i>
                        Branch ID: @(Model.CompanyBranchId.ToString() ?? "Not Assigned")
                    </p>
                </div>
                <div class="col-md-4 text-end">
                    <div class="text-muted small">
                        <div>VIN: @Model.VIN</div>
                        <div>Registered: @(Model.RegistrationDate?.ToString("dd MMM yyyy") ?? "N/A")</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Left Column -->
        <div class="col-lg-6">
            <!-- Basic Information -->
            <div class="detail-section">
                <h5 class="section-header">
                    <i class="fas fa-info-circle me-2"></i>Basic Information
                </h5>
                <div class="section-content">
                    <div class="info-grid">
                        <div class="info-item">
                            <i class="fas fa-industry info-icon"></i>
                            <div>
                                <div class="info-label">Make:</div>
                                <div class="info-value">@Model.Make</div>
                            </div>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-car-side info-icon"></i>
                            <div>
                                <div class="info-label">Model:</div>
                                <div class="info-value">@Model.Model</div>
                            </div>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-calendar-alt info-icon"></i>
                            <div>
                                <div class="info-label">Year:</div>
                                <div class="info-value">@Model.Year</div>
                            </div>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-palette info-icon"></i>
                            <div>
                                <div class="info-label">Color:</div>
                                <div class="info-value">@(Model.Color ?? "Not Specified")</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Technical Details -->
            <div class="detail-section">
                <h5 class="section-header">
                    <i class="fas fa-cogs me-2"></i>Technical Details
                </h5>
                <div class="section-content">
                    <div class="info-grid">
                        <div class="info-item">
                            <i class="fas fa-barcode info-icon"></i>
                            <div>
                                <div class="info-label">Engine #:</div>
                                <div class="info-value">@(Model.EngineNumber ?? "Not Available")</div>
                            </div>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-hashtag info-icon"></i>
                            <div>
                                <div class="info-label">Chassis #:</div>
                                <div class="info-value">@(Model.ChassisNumber ?? "Not Available")</div>
                            </div>
                        </div>
                        <div class="info-item @(Model.Mileage > 100000 ? "expiry-warning" : "")">
                            <i class="fas fa-tachometer-alt info-icon"></i>
                            <div>
                                <div class="info-label">Mileage:</div>
                                <div class="info-value">
                                    @(Model.Mileage?.ToString("N0") ?? "0") km
                                    @if (Model.Mileage > 100000)
                                    {
                                        <small class="text-warning ms-2">
                                            <i class="fas fa-exclamation-triangle"></i> High Mileage
                                        </small>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-gas-pump info-icon"></i>
                            <div>
                                <div class="info-label">Fuel Type:</div>
                                <div class="info-value">@(Model.FuelType.ToString() ?? "Not Specified")</div>
                            </div>
                        </div>
                        <div class="info-item">
                            <i class="fas fa-cog info-icon"></i>
                            <div>
                                <div class="info-label">Transmission:</div>
                                <div class="info-value">@(Model.TransmissionType.ToString() ?? "Not Specified")</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Service & Maintenance -->
            <div class="detail-section">
                <h5 class="section-header">
                    <i class="fas fa-wrench me-2"></i>Service & Maintenance
                </h5>
                <div class="section-content">
                    <div class="timeline-item">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="mb-1">Last Service</h6>
                                <p class="mb-0 text-muted">
                                    @if (Model.LastServiceDate.HasValue)
                                    {
                                        @Model.LastServiceDate.Value.ToString("dd MMM yyyy")
                                        <small class="ms-2">
                                            (@((DateTime.Now - Model.LastServiceDate.Value).Days) days ago)
                                        </small>
                                    }
                                    else
                                    {
                                        <span class="text-warning">No service record</span>
                                    }
                                </p>
                            </div>
                            @if (Model.LastServiceDate.HasValue && (DateTime.Now - Model.LastServiceDate.Value).Days > 180)
                            {
                                <span class="badge bg-warning">
                                    <i class="fas fa-exclamation-triangle me-1"></i>Service Due
                                </span>
                            }
                        </div>
                    </div>

                    @if (Model.LastServiceDate.HasValue)
                    {
                        <div class="timeline-item">
                            <div>
                                <h6 class="mb-1">Next Service Estimate</h6>
                                <p class="mb-0 text-muted">
                                    @Model.LastServiceDate.Value.AddMonths(6).ToString("dd MMM yyyy")
                                    <small class="ms-2">(Estimated)</small>
                                </p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Right Column -->
        <div class="col-lg-6">
            <!-- Insurance & Legal -->
            <div class="detail-section">
                <h5 class="section-header">
                    <i class="fas fa-shield-alt me-2"></i>Insurance & Legal
                </h5>
                <div class="section-content">
                    <div class="info-grid">
                        <div class="info-item">
                            <i class="fas fa-building info-icon"></i>
                            <div>
                                <div class="info-label">Insurance Co.:</div>
                                <div class="info-value">@(Model.InsuranceCompany ?? "Not Specified")</div>
                            </div>
                        </div>
                        <div class="info-item @(Model.InsuranceExpiryDate.HasValue && Model.InsuranceExpiryDate.Value < DateTime.Now.AddDays(30) ? "expiry-danger" : Model.InsuranceExpiryDate.HasValue && Model.InsuranceExpiryDate.Value < DateTime.Now.AddDays(90) ? "expiry-warning" : "")">
                            <i class="fas fa-calendar-times info-icon"></i>
                            <div>
                                <div class="info-label">Insurance Expiry:</div>
                                <div class="info-value">
                                    @if (Model.InsuranceExpiryDate.HasValue)
                                    {
                                        @Model.InsuranceExpiryDate.Value.ToString("dd MMM yyyy")
                                        @if (Model.InsuranceExpiryDate.Value < DateTime.Now)
                                        {
                                            <small class="text-danger ms-2">
                                                <i class="fas fa-exclamation-circle"></i> Expired
                                            </small>
                                        }
                                        else if (Model.InsuranceExpiryDate.Value < DateTime.Now.AddDays(30))
                                        {
                                            <small class="text-danger ms-2">
                                                <i class="fas fa-exclamation-triangle"></i> Expires Soon
                                            </small>
                                        }
                                        else if (Model.InsuranceExpiryDate.Value < DateTime.Now.AddDays(90))
                                        {
                                            <small class="text-warning ms-2">
                                                <i class="fas fa-clock"></i> Expires in @((Model.InsuranceExpiryDate.Value - DateTime.Now).Days) days
                                            </small>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="info-item @(Model.RoadWorthyExpiryDate.HasValue && Model.RoadWorthyExpiryDate.Value < DateTime.Now.AddDays(30) ? "expiry-danger" : Model.RoadWorthyExpiryDate.HasValue && Model.RoadWorthyExpiryDate.Value < DateTime.Now.AddDays(90) ? "expiry-warning" : "")">
                            <i class="fas fa-road info-icon"></i>
                            <div>
                                <div class="info-label">Road-Worthy Expiry:</div>
                                <div class="info-value">
                                    @if (Model.RoadWorthyExpiryDate.HasValue)
                                    {
                                        @Model.RoadWorthyExpiryDate.Value.ToString("dd MMM yyyy")
                                        @if (Model.RoadWorthyExpiryDate.Value < DateTime.Now)
                                        {
                                            <small class="text-danger ms-2">
                                                <i class="fas fa-exclamation-circle"></i> Expired
                                            </small>
                                        }
                                        else if (Model.RoadWorthyExpiryDate.Value < DateTime.Now.AddDays(30))
                                        {
                                            <small class="text-danger ms-2">
                                                <i class="fas fa-exclamation-triangle"></i> Expires Soon
                                            </small>
                                        }
                                        else if (Model.RoadWorthyExpiryDate.Value < DateTime.Now.AddDays(90))
                                        {
                                            <small class="text-warning ms-2">
                                                <i class="fas fa-clock"></i> Expires in @((Model.RoadWorthyExpiryDate.Value - DateTime.Now).Days) days
                                            </small>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Photos Section -->
            <div class="detail-section">
                <h5 class="section-header">
                    <i class="fas fa-camera me-2"></i>Vehicle Photos
                    @if (Model.Photos != null && Model.Photos.Any())
                    {
                        <span class="badge bg-light text-dark ms-2">@Model.Photos.Count()</span>
                    }
                </h5>
                <div class="section-content">
                    @if (Model.Photos != null && Model.Photos.Any())
                    {
                        <div class="photo-gallery">
                            @foreach (var photo in Model.Photos)
                            {
                                <div class="photo-item" onclick="viewPhoto('@Url.Content(photo.FilePath)', '@photo.FileName')">
                                    <img src="@Url.Content(photo.FilePath)" alt="@photo.FileName" loading="lazy" />
                                    <div class="photo-overlay">
                                        <div class="text-truncate">@photo.FileName</div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="fas fa-camera"></i>
                            <h6>No Photos Available</h6>
                            <p class="mb-0">No photos have been uploaded for this vehicle.</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Documents Section -->
            <div class="detail-section">
                <h5 class="section-header">
                    <i class="fas fa-file-alt me-2"></i>Vehicle Documents
                    @if (Model.Documents != null && Model.Documents.Any())
                    {
                        <span class="badge bg-light text-dark ms-2">@Model.Documents.Count()</span>
                    }
                </h5>
                <div class="section-content">
                    @if (Model.Documents != null && Model.Documents.Any())
                    {
                        <ul class="document-list">
                            @foreach (var doc in Model.Documents)
                            {
                                <li class="document-item">
                                    <div class="document-info">
                                        <div class="document-icon">
                                            <i class="fas fa-file-@(GetFileIcon(doc.FileName))"></i>
                                        </div>
                                        <div class="document-details">
                                            <h6>@doc.FileName</h6>
                                            <small class="text-muted">
                                                <i class="fas fa-file me-1"></i>
                                                Document • @GetFileExtension(doc.FileName).ToUpper()
                                            </small>
                                        </div>
                                    </div>
                                    <a href="@Url.Content(doc.FilePath)"
                                       class="btn-download"
                                       target="_blank"
                                       title="Download @doc.FileName">
                                        <i class="fas fa-download me-2"></i>Download
                                    </a>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="fas fa-file-alt"></i>
                            <h6>No Documents Available</h6>
                            <p class="mb-0">No documents have been uploaded for this vehicle.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions Footer -->
    <div class="detail-section">
        <div class="section-content">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h6 class="mb-1">Quick Actions</h6>
                    <p class="mb-0 text-muted small">Common actions for this vehicle</p>
                </div>
                <div class="col-md-4">
                    <div class="btn-group w-100" role="group">
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="printDetails()">
                            <i class="fas fa-print me-1"></i>Print
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="exportDetails()">
                            <i class="fas fa-download me-1"></i>Export
                        </button>
                        <button type="button" class="btn btn-outline-info btn-sm" onclick="shareDetails()">
                            <i class="fas fa-share me-1"></i>Share
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Photo Viewer Modal -->
<div class="modal fade" id="photoViewerModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content" style="background: transparent; border: none;">
            <div class="modal-body p-0 text-center">
                <button type="button" class="btn-close position-absolute top-0 end-0 m-3 btn-close-white"
                        data-bs-dismiss="modal" aria-label="Close" style="z-index: 1060;"></button>
                <img id="photoViewerImage" src="" alt="" class="img-fluid rounded" style="max-height: 80vh;" />
                <div class="mt-3 text-white">
                    <h5 id="photoViewerTitle"></h5>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetFileIcon(string fileName)
    {
        if (string.IsNullOrEmpty(fileName))
            return "alt";

        var extension = System.IO.Path.GetExtension(fileName)
                             .ToLowerInvariant();

        switch (extension)
        {
            case ".pdf":
                return "pdf";

            case ".doc":
            case ".docx":
                return "word";

            case ".xls":
            case ".xlsx":
                return "excel";

            case ".ppt":
            case ".pptx":
                return "powerpoint";

            case ".jpg":
            case ".jpeg":
            case ".png":
            case ".gif":
                return "image";

            case ".zip":
            case ".rar":
                return "archive";

            default:
                return "alt";
        }
    }

    public string GetFileExtension(string fileName)
    {
        if (string.IsNullOrEmpty(fileName))
            return "file";

        return System.IO.Path.GetExtension(fileName)
                     .TrimStart('.');
    }
}
<script>
    // Photo viewer functionality
    function viewPhoto(imageSrc, title) {
        document.getElementById('photoViewerImage').src = imageSrc;
        document.getElementById('photoViewerTitle').textContent = title;

        var photoModal = new bootstrap.Modal(document.getElementById('photoViewerModal'));
        photoModal.show();
    }

    // Quick actions functionality
    function printDetails() {
        // Create a new window with printable content
        var printWindow = window.open('', '_blank');
        var printContent = document.querySelector('.container-fluid').cloneNode(true);

        // Remove non-printable elements
        var buttonsToRemove = printContent.querySelectorAll('button, .btn, .photo-item');
        buttonsToRemove.forEach(function(btn) {
            if (btn.classList.contains('photo-item')) {
                // Keep photos but remove click functionality
                btn.onclick = null;
                btn.style.cursor = 'default';
            } else {
                btn.remove();
            }
        });

        printWindow.document.write(`
            <html>
                <head>
                    <title>Vehicle Details - @Model.Make @Model.Model</title>
                    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
                    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
                    <style>
                        @@media print {
                            .no-print { display: none !important; }
                            .container-fluid { margin: 0; padding: 15px; }
                            .detail-section { break-inside: avoid; margin-bottom: 20px; }
                            .photo-gallery { grid-template-columns: repeat(3, 1fr); }
                            .photo-item img { height: 100px; }
                        }
                    </style>
                </head>
                <body>
                    ${printContent.outerHTML}
                </body>
            </html>
        `);

        printWindow.document.close();
        printWindow.focus();
        setTimeout(function() {
            printWindow.print();
            printWindow.close();
        }, 500);
    }

    function exportDetails() {
        // Create exportable data
        var vehicleData = {
            make: '@Model.Make',
            model: '@Model.Model',
            year: '@Model.Year',
            vin: '@Model.VIN',
            plateNo: '@Model.PlateNo',
            color: '@Model.Color',
            engineNumber: '@Model.EngineNumber',
            chassisNumber: '@Model.ChassisNumber',
            registrationDate: '@Model.RegistrationDate?.ToString("yyyy-MM-dd")',
            lastServiceDate: '@Model.LastServiceDate?.ToString("yyyy-MM-dd")',
            mileage: '@Model.Mileage',
            fuelType: '@Model.FuelType',
            transmissionType: '@Model.TransmissionType',
            insuranceCompany: '@Model.InsuranceCompany',
            insuranceExpiryDate: '@Model.InsuranceExpiryDate?.ToString("yyyy-MM-dd")',
            roadWorthyExpiryDate: '@Model.RoadWorthyExpiryDate?.ToString("yyyy-MM-dd")',
            companyBranchId: '@Model.CompanyBranchId',
            vehicleStatus: '@Model.VehicleStatus',
            vehicleType: '@Model.VehicleType'
        };

        // Convert to CSV
        var csv = 'Field,Value\n';
        for (var key in vehicleData) {
            if (vehicleData[key]) {
                csv += `${key.replace(/([A-Z])/g, ' $1').trim()},${vehicleData[key]}\n`;
            }
        }

        // Download CSV
        var blob = new Blob([csv], { type: 'text/csv' });
        var url = window.URL.createObjectURL(blob);
        var a = document.createElement('a');
        a.href = url;
        a.download = `vehicle_details_${vehicleData.plateNo}_${new Date().toISOString().split('T')[0]}.csv`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        window.URL.revokeObjectURL(url);
    }

    function shareDetails() {
        // Create shareable summary
        var shareText = `Vehicle Details:\n@Model.Make @Model.Model (@Model.Year)\nPlate: @Model.PlateNo\nVIN: @Model.VIN`;

        if (navigator.share) {
            // Use native sharing if available
            navigator.share({
                title: 'Vehicle Details',
                text: shareText,
                url: window.location.href
            }).catch(function(error) {
                console.log('Error sharing:', error);
                fallbackShare(shareText);
            });
        } else {
            fallbackShare(shareText);
        }
    }

    function fallbackShare(text) {
        // Fallback: copy to clipboard
        if (navigator.clipboard) {
            navigator.clipboard.writeText(text).then(function() {
                showToast('Vehicle details copied to clipboard!', 'success');
            }).catch(function() {
                showToast('Failed to copy to clipboard', 'error');
            });
        } else {
            // Older browser fallback
            var textArea = document.createElement('textarea');
            textArea.value = text;
            document.body.appendChild(textArea);
            textArea.select();
            try {
                document.execCommand('copy');
                showToast('Vehicle details copied to clipboard!', 'success');
            } catch (err) {
                showToast('Failed to copy to clipboard', 'error');
            }
            document.body.removeChild(textArea);
        }
    }

    function showToast(message, type) {
        // Create and show a Bootstrap toast
        var toastHtml = `
            <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0"
                 role="alert" aria-live="assertive" aria-atomic="true"
                 style="position: fixed; top: 20px; right: 20px; z-index: 1060;">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto"
                            data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        `;

        document.body.insertAdjacentHTML('beforeend', toastHtml);
        var toastElement = document.body.lastElementChild;
        var toast = new bootstrap.Toast(toastElement, { delay: 3000 });
        toast.show();

        // Remove toast element after it's hidden
        toastElement.addEventListener('hidden.bs.toast', function() {
            toastElement.remove();
        });
    }

    // Initialize tooltips if any
    $(document).ready(function() {
        $('[data-bs-toggle="tooltip"]').tooltip();
    });
</script>