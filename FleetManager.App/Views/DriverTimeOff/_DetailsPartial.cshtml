@* @using FleetManager.Business.Enums
@using FleetManager.Business.ViewModels.Schedule
@model TimeOffDetailsViewModel

<div>
    <dl class="row">
        <dt class="col-sm-3">Category</dt>
        <dd class="col-sm-9">@Model.Request.CategoryName</dd>

        <dt class="col-sm-3">From</dt>
        <dd class="col-sm-9">@Model.Request.StartDate.ToString("d MMMM yyyy")</dd>

        <dt class="col-sm-3">To</dt>
        <dd class="col-sm-9">@Model.Request.EndDate.ToString("d MMMM yyyy")</dd>

        <dt class="col-sm-3">Status</dt>
        <dd class="col-sm-9">
            <span class="badge @(
            Model.Request.Status == TimeOffStatus.Approved ? "bg-success" :
            Model.Request.Status == TimeOffStatus.Denied   ? "bg-danger"  :
            "bg-secondary")">
                @Model.Request.Status
            </span>
        </dd>

        <dt class="col-sm-3">Submitted</dt>
        <dd class="col-sm-9">@Model.Request.RequestedAt.ToString("d MMMM yyyy HH:mm")</dd>

        <dt class="col-sm-3">Reviewed By</dt>
        <dd class="col-sm-9">
            @if (!string.IsNullOrEmpty(Model.Request.ReviewedByName))
            {
                <span>@Model.Request.ReviewedByName</span>
                <span>on @Model.Request.ReviewedAt?.ToString("d MMMM yyyy HH:mm")</span>
            }
            else
            {
                <em>Not yet reviewed</em>
            }
        </dd>

        <dt class="col-sm-3">Admin Comments</dt>
        <dd class="col-sm-9">@Model.Request.AdminNotes ?? "<em>—</em>"</dd>

        <dt class="col-sm-3">Reason</dt>
        <dd class="col-sm-9">@Model.Request.Reason</dd>
    </dl>
</div>
 *@







@using FleetManager.Business.Enums
@using FleetManager.Business.ViewModels.Schedule
@model TimeOffDetailsViewModel

<style>
.details-container {
    padding: 1.5rem;
}

.detail-card {
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 1.5rem;
    border: 1px solid rgba(148, 163, 184, 0.2);
    position: relative;
    overflow: hidden;
}

.detail-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 100%;
    background: linear-gradient(135deg, #3b82f6, #2563eb);
}

.detail-header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid rgba(148, 163, 184, 0.1);
}

.detail-icon {
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    background: linear-gradient(135deg, #3b82f6, #2563eb);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.25rem;
    box-shadow: 0 4px 6px -1px rgb(59 130 246 / 0.3);
}

.detail-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1e293b;
    margin: 0;
}

.detail-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
}

.detail-item {
    background: white;
    border-radius: 8px;
    padding: 1.25rem;
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
    transition: all 0.3s ease;
    border: 1px solid rgba(148, 163, 184, 0.1);
}

.detail-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}

.detail-label {
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: #64748b;
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
    gap: 0.375rem;
}

.detail-value {
    font-size: 1rem;
    font-weight: 600;
    color: #1e293b;
    line-height: 1.5;
}

.status-display {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.25rem;
    border-radius: 50px;
    font-size: 0.875rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    box-shadow: 0 2px 4px -1px rgb(0 0 0 / 0.1);
}

.status-approved {
    background: linear-gradient(135deg, #dcfce7, #bbf7d0);
    color: #166534;
    border: 1px solid #86efac;
}

.status-denied {
    background: linear-gradient(135deg, #fecaca, #fca5a5);
    color: #991b1b;
    border: 1px solid #f87171;
}

.status-pending {
    background: linear-gradient(135deg, #fef3c7, #fde68a);
    color: #92400e;
    border: 1px solid #facc15;
}

.timeline-section {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    border: 1px solid rgba(148, 163, 184, 0.1);
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
}

.timeline-header {
    font-size: 1.125rem;
    font-weight: 700;
    color: #1e293b;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.timeline-item {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    padding: 1rem 0;
    border-bottom: 1px solid rgba(148, 163, 184, 0.1);
    position: relative;
}

.timeline-item:last-child {
    border-bottom: none;
}

.timeline-icon {
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.875rem;
    font-weight: 600;
    flex-shrink: 0;
}

.timeline-submitted {
    background: linear-gradient(135deg, #dbeafe, #bfdbfe);
    color: #1d4ed8;
}

.timeline-reviewed {
    background: linear-gradient(135deg, #dcfce7, #bbf7d0);
    color: #166534;
}

.timeline-content {
    flex: 1;
}

.timeline-title {
    font-size: 1rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 0.25rem;
}

.timeline-meta {
    font-size: 0.875rem;
    color: #64748b;
    margin-bottom: 0.5rem;
}

.timeline-description {
    font-size: 0.875rem;
    color: #475569;
    line-height: 1.5;
}

.reason-section {
    background: linear-gradient(135deg, #f8fafc, #f1f5f9);
    border-radius: 12px;
    padding: 1.5rem;
    border-left: 4px solid #3b82f6;
    margin-top: 1rem;
}

.reason-header {
    font-size: 1rem;
    font-weight: 700;
    color: #1e293b;
    margin-bottom: 0.75rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.reason-text {
    font-size: 0.95rem;
    color: #475569;
    line-height: 1.6;
    font-style: italic;
}

.duration-highlight {
    background: linear-gradient(135deg, #ede9fe, #ddd6fe);
    color: #6b21a8;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    font-weight: 600;
    display: inline-block;
    margin-top: 0.5rem;
}

.no-content {
    color: #9ca3af;
    font-style: italic;
    font-size: 0.875rem;
}

@@media (max-width: 768px) {
    .detail-grid {
        grid-template-columns: 1fr;
    }
    
    .details-container {
        padding: 1rem;
    }
    
    .detail-card {
        padding: 1rem;
    }
    
    .timeline-item {
        flex-direction: column;
        text-align: center;
    }
    
    .timeline-icon {
        margin: 0 auto;
    }
}
</style>

<div class="details-container">
    <div class="detail-card">
        <div class="detail-header">
            <div class="detail-icon">
                <i class="fas fa-calendar-check"></i>
            </div>
            <div>
                <h3 class="detail-title">@Model.Request.CategoryName</h3>
                <p class="text-muted mb-0">Time-Off Request Details</p>
            </div>
        </div>

        <div class="detail-grid">
            <div class="detail-item">
                <div class="detail-label">
                    <i class="fas fa-calendar-day"></i>
                    Start Date
                </div>
                <div class="detail-value">@Model.Request.StartDate.ToString("dddd, MMMM d, yyyy")</div>
            </div>

            <div class="detail-item">
                <div class="detail-label">
                    <i class="fas fa-calendar-times"></i>
                    End Date
                </div>
                <div class="detail-value">@Model.Request.EndDate.ToString("dddd, MMMM d, yyyy")</div>
            </div>

            <div class="detail-item">
                <div class="detail-label">
                    <i class="fas fa-hourglass-half"></i>
                    Duration
                </div>
                <div class="detail-value">
                    @{
                        var duration = (Model.Request.EndDate - Model.Request.StartDate).Days + 1;
                        var durationText = duration == 1 ? "1 day" : $"{duration} days";
                    }
                    <span class="duration-highlight">@durationText</span>
                </div>
            </div>

            <div class="detail-item">
                <div class="detail-label">
                    <i class="fas fa-info-circle"></i>
                    Current Status
                </div>
                <div class="detail-value">
                    <span class="status-display @(
                        Model.Request.Status == TimeOffStatus.Approved ? "status-approved" :
                        Model.Request.Status == TimeOffStatus.Denied   ? "status-denied"  :
                        "status-pending")">
                        <i class="fas @(
                            Model.Request.Status == TimeOffStatus.Approved ? "fa-check-circle" :
                            Model.Request.Status == TimeOffStatus.Denied   ? "fa-times-circle"  :
                            "fa-clock")"></i>
                        @Model.Request.Status
                    </span>
                </div>
            </div>
        </div>
    </div>

    <!-- Timeline Section -->
    <div class="timeline-section">
        <div class="timeline-header">
            <i class="fas fa-history"></i>
            Request Timeline
        </div>

        <div class="timeline-item">
            <div class="timeline-icon timeline-submitted">
                <i class="fas fa-paper-plane"></i>
            </div>
            <div class="timeline-content">
                <div class="timeline-title">Request Submitted</div>
                <div class="timeline-meta">
                    <i class="fas fa-clock me-1"></i>
                    @Model.Request.RequestedAt.ToString("MMMM d, yyyy 'at' h:mm tt")
                </div>
                <div class="timeline-description">
                    Your time-off request was successfully submitted and is awaiting review.
                </div>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.Request.ReviewedByName))
        {
            <div class="timeline-item">
                <div class="timeline-icon timeline-reviewed">
                    <i class="fas @(Model.Request.Status == TimeOffStatus.Approved ? "fa-check" : "fa-times")"></i>
                </div>
                <div class="timeline-content">
                    <div class="timeline-title">Request @Model.Request.Status.ToString()</div>
                    <div class="timeline-meta">
                        <i class="fas fa-user me-1"></i>
                        Reviewed by @Model.Request.ReviewedByName on @Model.Request.ReviewedAt?.ToString("MMMM d, yyyy 'at' h:mm tt")
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Request.AdminNotes))
                    {
                        <div class="timeline-description">
                            <strong>Admin Comments:</strong> @Model.Request.AdminNotes
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="timeline-item">
                <div class="timeline-icon" style="background: linear-gradient(135deg, #fef3c7, #fde68a); color: #92400e;">
                    <i class="fas fa-hourglass-half"></i>
                </div>
                <div class="timeline-content">
                    <div class="timeline-title">Pending Review</div>
                    <div class="timeline-meta">
                        <i class="fas fa-info-circle me-1"></i>
                        Awaiting administrative review
                    </div>
                    <div class="timeline-description">
                        Your request is currently being reviewed by management. You will be notified once a decision is made.
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Reason Section -->
    @if (!string.IsNullOrEmpty(Model.Request.Reason))
    {
        <div class="reason-section">
            <div class="reason-header">
                <i class="fas fa-comment-alt"></i>
                Your Reason
            </div>
            <div class="reason-text">
                "@Model.Request.Reason"
            </div>
        </div>
    }
    else
    {
        <div class="reason-section">
            <div class="reason-header">
                <i class="fas fa-comment-alt"></i>
                Reason
            </div>
            <div class="reason-text no-content">
                No additional reason provided
            </div>
        </div>
    }
</div>